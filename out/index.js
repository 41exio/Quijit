!function(){class e{constructor(e){this.question=e.question,this.answer=e.answer,e.snippet&&(this.snippet=e.snippet.replace(/\\n/g,"\n")),this.notAnswers=[];let t=1;for(;e[`false${t}`];)this.notAnswers.push(e[`false${t}`]),t++}}class t{constructor(){this.body=document.getElementsByTagName("body")[0],this.main=document.getElementsByTagName("main")[0],this.counter={},this.counter.correct=document.querySelector("footer div.progress a.correct"),this.counter.incorrect=document.querySelector("footer div.progress a.incorrect"),this.counter.remaining=document.querySelector("footer div.progress a.remaining"),this.classes={correct:"correctAnswer"},this.hashes={dark:"#dark",toggleHint:"#toggleHint",load:"#convert",correct:"#correct",incorrect:"#wrong"}}}const n=new t,o=(e,t)=>{t.innerHTML="";const o=document.createRange().createContextualFragment('<div id="questionDiv"></div>'),r=o.querySelector("div"),c=document.createElement("h2");if(c.textContent=e.question,r.appendChild(c),e.snippet){const t=document.createElement("pre");t.textContent=e.snippet,r.appendChild(t)}let s=[];const i=document.createElement("a");i.textContent=e.answer,i.className=n.classes.correct,i.href=n.hashes.correct,s.push(i),e.notAnswers.forEach(e=>{const t=document.createElement("a");t.textContent=e,t.className="",t.href=n.hashes.incorrect,s.push(t)}),(s=(e=>{let t=e.length;for(;0!==t;){const n=Math.floor(Math.random()*t),o=e[t-=1];e[t]=e[n],e[n]=o}return e})(s)).forEach(e=>{r.appendChild(e)}),t.appendChild(o)},r=new t,c={},s=()=>{c.result={correct:0,incorrect:0,total:0}};s(),c.hintTimeout="";const i=()=>{s(),((e,t)=>{const n={};e.onchange=()=>{const o=e.files[0];if("text/csv"===o.type||"application/vnd.ms-excel"===o.type){const e=new FileReader;e.onload=()=>{n.content=e.result,n.name=o.name.replace(/\.[^\.]+$/,""),t(n)},e.readAsText(o)}else console.log("Error: File type not accepted.")}})((e=>(e.innerHTML='<input type="file" id="fileInput" name="file" accept=".csv">',e.firstChild))(r.main),t=>{c.csvObject=(e=>{const t=/(?:[\t ]?)+("+)?(.*?)\1(?:[\t ]?)+(?:,|$)/gm,n=(e,t,n)=>t<n.length-1,o=(e=e.replace(/[\r]/g,"")).split("\n"),r=o.splice(0,1)[0].match(t).filter(e=>e.length>1);for(let e=0;e<r.length-1;e++)r[e]=r[e].slice(0,-1);const c=[];for(const e of o){const o={};for(const[c,s]of[...e.matchAll(t)].filter(n).entries())o[r[c]]=s[2].length>0?s[2]:null;Object.keys(o).length>0&&c.push(o)}return c})(t.content),c.remaining=[],c.csvObject.forEach(t=>{c.remaining.push(new e(t))}),a(),window.location.hash=""})},a=()=>{if(((e,t)=>{t.correct.textContent=e.correct,t.incorrect.textContent=e.incorrect,t.remaining.textContent=e.remaining})({correct:c.result.correct,incorrect:c.result.incorrect,remaining:c.remaining.length},r.counter),c.remaining&&c.remaining.length>0){const e=Math.floor(Math.random()*c.remaining.length);c.current=c.remaining.splice(e,1)[0],o(c.current,r.main),clearTimeout(c.hintTimeout),c.hintTimeout=setTimeout(()=>{(e=>{e.firstChild.classList.add("hint")})(r.main)},1e4)}else((e,t)=>{const n=Math.floor(e.correct/e.total*100);t.innerHTML="<p></p>",t.firstChild.textContent=`You got ${e.correct} correct, ${e.incorrect} wrong, out of a total of ${e.total}, which is a success rate of ${n}%`})(c.result,r.main),s();window.location.hash=""};window.onhashchange=()=>{const e=window.location.hash;e===r.hashes.load?i():e===r.hashes.dark?((e=>{e.classList.toggle("dark")})(r.body),window.location.hash=""):e===r.hashes.toggleHint?window.location.hash="":e===r.hashes.correct?(c.result.correct++,c.result.total++,a()):e===r.hashes.incorrect&&(c.result.incorrect++,c.result.total++,a())}}();